version: "3.8"

services:
  traefik:
    image: traefik:v3.1.6
    environment:
      FORCE_DEPLOY: "green"
      CF_DNS_API_TOKEN: "${CF_DNS_API_TOKEN}"
    command:
      - "--configFile=/traefik.yaml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yaml:/traefik.yaml:ro"
      - "./dynamic_conf/traefik_dynamic.yaml:/dynamic_conf/traefik_dynamic.yaml:ro"
      - "./acme.json:/acme.json"
      - "./cloudflare:/cloudflare:ro"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.middlewares=allow-private@file"
        - "traefik.http.routers.traefik.rule=Host(`traefik.oliverlambson.com`) || HostRegexp(`^traefik(\\..+)?$`)"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik.tls.domains[0].main=traefik.oliverlambson.com"
    healthcheck:
      test: "wget -qO - http://localhost:8080/ping || exit 1"
      interval: 4s
      timeout: 2s
      retries: 5
    networks:
      public:
        ipv4_address: 10.128.0.10
      private:
        ipv4_address: 10.128.1.10

networks:
  public:
    external: true
  private:
    external: true
